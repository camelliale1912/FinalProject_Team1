@{
    ViewData["Title"] = "Search Books";
}

<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f8f9fa;
    }
    
    .dashboard-header {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white;
        padding: 2rem;
        border-radius: 10px;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }
    
    .search-container {
        background-color: white;
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08);
        margin-bottom: 2rem;
    }
    
    .search-input {
        border-radius: 50px;
        padding: 1rem 1.5rem;
        border: 2px solid #e9ecef;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
    }
    
    .search-input:focus {
        border-color: #6a11cb;
        box-shadow: 0 4px 15px rgba(106, 17, 203, 0.2);
    }
    
    .search-btn {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white;
        border: none;
        border-radius: 50px;
        padding: 1rem 2rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .search-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }
    
    .book-card {
        background-color: white;
        border-radius: 15px;
        overflow: hidden;
        transition: all 0.3s ease;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08);
        height: 100%;
        margin-bottom: 1.5rem;
    }
    
    .book-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.12);
    }
    
    .book-img-container {
        height: 200px;
        overflow: hidden;
        background: linear-gradient(135deg, #f6d365 0%, #fda085 100%);
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .book-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    .book-icon {
        font-size: 4rem;
        color: white;
    }
    
    .book-body {
        padding: 1.5rem;
    }
    
    .book-title {
        font-weight: 600;
        margin-bottom: 0.5rem;
        font-size: 1.1rem;
        color: #333;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        height: 3rem;
    }
    
    .book-author {
        color: #6c757d;
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
    }
    
    .book-year {
        color: #6c757d;
        font-size: 0.9rem;
        margin-bottom: 1rem;
    }
    
    .book-link {
        display: inline-block;
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white;
        text-decoration: none;
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-size: 0.9rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .book-link:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
        color: white;
    }
    
    .loading {
        display: none;
        text-align: center;
        padding: 2rem;
    }
    
    .loading-spinner {
        width: 3rem;
        height: 3rem;
        border: 5px solid #e9ecef;
        border-top: 5px solid #6a11cb;
        border-radius: 50%;
        animation: spinner-animation 1s linear infinite;
        margin: 0 auto 1rem;
    }
    
    @@keyframes spinner-animation {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    .no-results {
        display: none;
        text-align: center;
        padding: 2rem;
        background-color: white;
        border-radius: 15px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08);
    }
    
    .error-message {
        display: none;
        text-align: center;
        padding: 2rem;
        background-color: #fff5f5;
        border-radius: 15px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08);
        color: #e74a3b;
    }
</style>

<div class="container mt-4">
    <div class="dashboard-header">
        <h1 class="mb-2">Search Books</h1>
        <p class="lead mb-0">Discover books from the Open Library database</p>
    </div>
    
    <div class="search-container">
        <div class="row">
            <div class="col-md-10">
                <input type="text" id="searchInput" class="form-control search-input" placeholder="Enter book title, author, or ISBN...">
            </div>
            <div class="col-md-2">
                <button id="searchButton" class="btn search-btn w-100">Search</button>
            </div>
        </div>
    </div>
    
    <div id="loading" class="loading">
        <div class="loading-spinner"></div>
        <p>Searching for books...</p>
    </div>
    
    <div id="errorMessage" class="error-message">
        <i class="fas fa-exclamation-circle fa-3x mb-3"></i>
        <h4>Oops! Something went wrong</h4>
        <p>We couldn't complete your search. Please try again later.</p>
    </div>
    
    <div id="noResults" class="no-results">
        <i class="fas fa-search fa-3x mb-3"></i>
        <h4>No books found</h4>
        <p>We couldn't find any books matching your search. Try using different keywords.</p>
    </div>
    
    <div id="results" class="row">
        <!-- Search results will be displayed here -->
    </div>
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function() {
            // Handle search button click
            $('#searchButton').click(function() {
                performSearch();
            });
            
            // Handle Enter key press in search input
            $('#searchInput').keypress(function(e) {
                if (e.which === 13) {
                    performSearch();
                }
            });
            
            function performSearch() {
                const query = $('#searchInput').val().trim();
                
                if (query === '') {
                    return;
                }
                
                // Show loading spinner
                $('#results').empty();
                $('#noResults').hide();
                $('#errorMessage').hide();
                $('#loading').show();
                
                // Call Open Library API
                $.ajax({
                    url: `https://openlibrary.org/search.json?q=${encodeURIComponent(query)}`,
                    dataType: 'json',
                    success: function(data) {
                        $('#loading').hide();
                        
                        if (data.docs && data.docs.length > 0) {
                            displayResults(data.docs);
                        } else {
                            $('#noResults').show();
                        }
                    },
                    error: function() {
                        $('#loading').hide();
                        $('#errorMessage').show();
                    }
                });
            }
            
            function displayResults(books) {
                const resultsContainer = $('#results');
                resultsContainer.empty();
                
                // Display only the first 12 books
                const booksToDisplay = books.slice(0, 12);
                
                booksToDisplay.forEach(function(book) {
                    const coverUrl = book.cover_i 
                        ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg` 
                        : null;
                    
                    const title = book.title || 'Unknown Title';
                    const authors = book.author_name ? book.author_name.join(', ') : 'Unknown Author';
                    const year = book.first_publish_year || 'Unknown Year';
                    const key = book.key || '';
                    
                    const bookCard = `
                        <div class="col-md-4 col-lg-3">
                            <div class="book-card">
                                <div class="book-img-container">
                                    ${coverUrl 
                                        ? `<img src="${coverUrl}" class="book-img" alt="${title}">` 
                                        : `<i class="fas fa-book book-icon"></i>`
                                    }
                                </div>
                                <div class="book-body">
                                    <h5 class="book-title">${title}</h5>
                                    <p class="book-author">By: ${authors}</p>
                                    <p class="book-year">Published: ${year}</p>
                                    <a href="https://openlibrary.org${key}" target="_blank" class="book-link">
                                        <i class="fas fa-external-link-alt"></i> View Details
                                    </a>
                                </div>
                            </div>
                        </div>
                    `;
                    
                    resultsContainer.append(bookCard);
                });
            }
        });
    </script>
}
